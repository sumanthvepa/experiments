# Netplan applies a union of all the yaml files in the /etc/netplan
# directory.
# To avoid confusion I recommend only two file cloud-init.yaml
# which is essentially empty and  network.yaml which has all
# the definitions.
# You can find details on linux networking, kvm, and netplan in
# the following references:
# Official Netplan Documentation HOWTOs
# https://netplan.readthedocs.io/en/stable/examples/
# This absolutely fantastic video on libvirt networking which
# explains how networking works. This should help you understand
# what netplan is doing.
# https://www.youtube.com/watch?v=6435eNKpyYw
# The accompanying article is a gem as well:
# https://joshrosso.com/c/vm-networks/
# This video on configuring Ubuntu with netplan:
# https://www.youtube.com/watch?v=iLenyBBb6do
# Some information on TUN and TAP drivers in Wikipedia
# https://en.wikipedia.org/wiki/TUN/TAP
# An excellent video in installing KVM:
# https://www.youtube.com/watch?v=LHJhFW7_8EI
# Another really nice video on setting up a bridege with KVM:
# https://www.youtube.com/watch?v=qCUmf5gyOYY
# Server World's instructions on setting up kvm with netplan on
# Ubuntu:
# https://www.server-world.info/en/note?os=Ubuntu_24.04&p=kvm

network:
  version: 2
  ethernets:
    # We don't want this interface to get an address directly,
    # it is part of the br0 bridge. The bridge should get
    # the ip address. So we set dhcp4 and dhcp6 to false.
    enp1s0:
      dhcp4: false
      dhcp6: false
  bridges:
    br0:
      interfaces: [enp1s0]
      # The mac address needs to be the mac address
      # of enp1s0.
      macaddress: c0:3e:ba:31:3b:e4
      # In my network I use the dhcp server on the router
      # to handle macaddress to ip mappings and manage
      # all ip assignments to specific hosts from there.
      # This makes configuring servers easier.
      # So I only need the br0 interface to get its
      # ip address from the dhcp server.
      dhcp4: true
      dhcp6: false

# In theory, I should be able bridge to the wifi interface
# but I've not be able to figure out how to do that. I'm
# keeping my failed attempt at specifying the wifi interface
# in comments for future exploration.
#  wifis:
#    wlp2s0:
#      renderer: NetworkManager
#      match:
#        name: "wlp2s0"
#      dhcp4: true
#      dhcp6: true
#      access-points:
#        "athena":
#          auth:
#            key-management: "psk"
#            password: "sumanthhastoomanydevices"
#          networkmanager:
#            uuid: "8f33022b-899e-4636-96f8-a71980f14292"
#            name: "athena"
#            passthrough:
#              wifi-security.auth-alg: "open"
#              ipv6.addr-gen-mode: "default"
#              ipv6.ip6-privacy: "-1"
#              proxy._: ""
#      networkmanager:
#        uuid: "8f33022b-899e-4636-96f8-a71980f14292"
#        name: "athena"


